//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model", "FK_Products_Catetories", "Catetory", System.Data.Metadata.Edm.RelationshipMultiplicity.ZeroOrOne, typeof(MiscellaneousShop.Catetory), "Product", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(MiscellaneousShop.Product), true)]

#endregion

namespace MiscellaneousShop
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class MiscellaneousShopEntities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new MiscellaneousShopEntities object using the connection string found in the 'MiscellaneousShopEntities' section of the application configuration file.
        /// </summary>
        public MiscellaneousShopEntities() : base("name=MiscellaneousShopEntities", "MiscellaneousShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MiscellaneousShopEntities object.
        /// </summary>
        public MiscellaneousShopEntities(string connectionString) : base(connectionString, "MiscellaneousShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new MiscellaneousShopEntities object.
        /// </summary>
        public MiscellaneousShopEntities(EntityConnection connection) : base(connection, "MiscellaneousShopEntities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Catetory> Catetories
        {
            get
            {
                if ((_Catetories == null))
                {
                    _Catetories = base.CreateObjectSet<Catetory>("Catetories");
                }
                return _Catetories;
            }
        }
        private ObjectSet<Catetory> _Catetories;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Product> Products
        {
            get
            {
                if ((_Products == null))
                {
                    _Products = base.CreateObjectSet<Product>("Products");
                }
                return _Products;
            }
        }
        private ObjectSet<Product> _Products;

        #endregion
        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Catetories EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCatetories(Catetory catetory)
        {
            base.AddObject("Catetories", catetory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Products EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToProducts(Product product)
        {
            base.AddObject("Products", product);
        }

        #endregion
    }
    

    #endregion
    
    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Catetory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Catetory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Catetory object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Catetory CreateCatetory(global::System.Int32 id)
        {
            Catetory catetory = new Catetory();
            catetory.id = id;
            return catetory;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryName
        {
            get
            {
                return _CategoryName;
            }
            set
            {
                OnCategoryNameChanging(value);
                ReportPropertyChanging("CategoryName");
                _CategoryName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryName");
                OnCategoryNameChanged();
            }
        }
        private global::System.String _CategoryName;
        partial void OnCategoryNameChanging(global::System.String value);
        partial void OnCategoryNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CategoryDescription
        {
            get
            {
                return _CategoryDescription;
            }
            set
            {
                OnCategoryDescriptionChanging(value);
                ReportPropertyChanging("CategoryDescription");
                _CategoryDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("CategoryDescription");
                OnCategoryDescriptionChanged();
            }
        }
        private global::System.String _CategoryDescription;
        partial void OnCategoryDescriptionChanging(global::System.String value);
        partial void OnCategoryDescriptionChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Products_Catetories", "Product")]
        public EntityCollection<Product> Products
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Product>("Model.FK_Products_Catetories", "Product");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Product>("Model.FK_Products_Catetories", "Product", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model", Name="Product")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Product : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Product object.
        /// </summary>
        /// <param name="id">Initial value of the id property.</param>
        public static Product CreateProduct(global::System.Int32 id)
        {
            Product product = new Product();
            product.id = id;
            return product;
        }

        #endregion
        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 id
        {
            get
            {
                return _id;
            }
            set
            {
                if (_id != value)
                {
                    OnidChanging(value);
                    ReportPropertyChanging("id");
                    _id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("id");
                    OnidChanged();
                }
            }
        }
        private global::System.Int32 _id;
        partial void OnidChanging(global::System.Int32 value);
        partial void OnidChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductNumber
        {
            get
            {
                return _ProductNumber;
            }
            set
            {
                OnProductNumberChanging(value);
                ReportPropertyChanging("ProductNumber");
                _ProductNumber = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductNumber");
                OnProductNumberChanged();
            }
        }
        private global::System.String _ProductNumber;
        partial void OnProductNumberChanging(global::System.String value);
        partial void OnProductNumberChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductName
        {
            get
            {
                return _ProductName;
            }
            set
            {
                OnProductNameChanging(value);
                ReportPropertyChanging("ProductName");
                _ProductName = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductName");
                OnProductNameChanged();
            }
        }
        private global::System.String _ProductName;
        partial void OnProductNameChanging(global::System.String value);
        partial void OnProductNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> ProductSupplierId
        {
            get
            {
                return _ProductSupplierId;
            }
            set
            {
                OnProductSupplierIdChanging(value);
                ReportPropertyChanging("ProductSupplierId");
                _ProductSupplierId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("ProductSupplierId");
                OnProductSupplierIdChanged();
            }
        }
        private Nullable<global::System.Int32> _ProductSupplierId;
        partial void OnProductSupplierIdChanging(Nullable<global::System.Int32> value);
        partial void OnProductSupplierIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> SafetyStockLevel
        {
            get
            {
                return _SafetyStockLevel;
            }
            set
            {
                OnSafetyStockLevelChanging(value);
                ReportPropertyChanging("SafetyStockLevel");
                _SafetyStockLevel = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("SafetyStockLevel");
                OnSafetyStockLevelChanged();
            }
        }
        private Nullable<global::System.Int32> _SafetyStockLevel;
        partial void OnSafetyStockLevelChanging(Nullable<global::System.Int32> value);
        partial void OnSafetyStockLevelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CategoryId
        {
            get
            {
                return _CategoryId;
            }
            set
            {
                OnCategoryIdChanging(value);
                ReportPropertyChanging("CategoryId");
                _CategoryId = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CategoryId");
                OnCategoryIdChanged();
            }
        }
        private Nullable<global::System.Int32> _CategoryId;
        partial void OnCategoryIdChanging(Nullable<global::System.Int32> value);
        partial void OnCategoryIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String Color
        {
            get
            {
                return _Color;
            }
            set
            {
                OnColorChanging(value);
                ReportPropertyChanging("Color");
                _Color = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("Color");
                OnColorChanged();
            }
        }
        private global::System.String _Color;
        partial void OnColorChanging(global::System.String value);
        partial void OnColorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentQuantityInStock
        {
            get
            {
                return _CurrentQuantityInStock;
            }
            set
            {
                OnCurrentQuantityInStockChanging(value);
                ReportPropertyChanging("CurrentQuantityInStock");
                _CurrentQuantityInStock = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentQuantityInStock");
                OnCurrentQuantityInStockChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentQuantityInStock;
        partial void OnCurrentQuantityInStockChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentQuantityInStockChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductMainPhoto
        {
            get
            {
                return _ProductMainPhoto;
            }
            set
            {
                OnProductMainPhotoChanging(value);
                ReportPropertyChanging("ProductMainPhoto");
                _ProductMainPhoto = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductMainPhoto");
                OnProductMainPhotoChanged();
            }
        }
        private global::System.String _ProductMainPhoto;
        partial void OnProductMainPhotoChanging(global::System.String value);
        partial void OnProductMainPhotoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.Int32> CurrentPrice
        {
            get
            {
                return _CurrentPrice;
            }
            set
            {
                OnCurrentPriceChanging(value);
                ReportPropertyChanging("CurrentPrice");
                _CurrentPrice = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CurrentPrice");
                OnCurrentPriceChanged();
            }
        }
        private Nullable<global::System.Int32> _CurrentPrice;
        partial void OnCurrentPriceChanging(Nullable<global::System.Int32> value);
        partial void OnCurrentPriceChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public Nullable<global::System.DateTime> DateModified
        {
            get
            {
                return _DateModified;
            }
            set
            {
                OnDateModifiedChanging(value);
                ReportPropertyChanging("DateModified");
                _DateModified = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("DateModified");
                OnDateModifiedChanged();
            }
        }
        private Nullable<global::System.DateTime> _DateModified;
        partial void OnDateModifiedChanging(Nullable<global::System.DateTime> value);
        partial void OnDateModifiedChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String ProductDescription
        {
            get
            {
                return _ProductDescription;
            }
            set
            {
                OnProductDescriptionChanging(value);
                ReportPropertyChanging("ProductDescription");
                _ProductDescription = StructuralObject.SetValidValue(value, true);
                ReportPropertyChanged("ProductDescription");
                OnProductDescriptionChanged();
            }
        }
        private global::System.String _ProductDescription;
        partial void OnProductDescriptionChanging(global::System.String value);
        partial void OnProductDescriptionChanged();

        #endregion
    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model", "FK_Products_Catetories", "Catetory")]
        public Catetory Catetory
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catetory>("Model.FK_Products_Catetories", "Catetory").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catetory>("Model.FK_Products_Catetories", "Catetory").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Catetory> CatetoryReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Catetory>("Model.FK_Products_Catetories", "Catetory");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Catetory>("Model.FK_Products_Catetories", "Catetory", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
